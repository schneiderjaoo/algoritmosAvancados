{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitClones/algoritmosAvancados/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Teclado from \"./components/Teclado\";\nimport AcessButton from \"./components/AcessButton\";\nimport CreateUserButton from \"./components/CreateUserButton\";\nimport tecladoService from \"./services/tecladoService\";\nimport logo from '../src/resources/catolica.png';\nimport CreateUserModal from \"./components/CreateUserModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [teclado, setTeclado] = useState([]);\n  const [erro, setErro] = useState(\"\");\n  useEffect(() => {\n    gerarTeclado();\n  }, []);\n  const gerarTeclado = async () => {\n    try {\n      const response = await tecladoService.gerarTeclado();\n      setTeclado(response.data);\n    } catch (err) {\n      setErro(\"Erro ao carregar teclado\");\n    }\n  };\n  const resetarTentativas = async () => {\n    try {\n      await tecladoService.resetarTentativas();\n      setErro(\"\");\n      gerarTeclado();\n    } catch (err) {\n      setErro(\"Erro ao resetar tentativas\");\n    }\n  };\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"userGrid\", {\n      user: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), erro && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: erro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Teclado, {\n      teclas: teclado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AcessButton, {\n      onAcess: resetarTentativas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateUserButton, {\n      onAcess: openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateUserModal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"Cat\\xF3lica SC\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"D44rOowviVo6BLm6SthI7DyzEng=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Teclado","AcessButton","CreateUserButton","tecladoService","logo","CreateUserModal","jsxDEV","_jsxDEV","App","_s","teclado","setTeclado","erro","setErro","gerarTeclado","response","data","err","resetarTentativas","isModalOpen","setIsModalOpen","openModal","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","user","teclas","onAcess","isOpen","onRequestClose","src","alt","_c","$RefreshReg$"],"sources":["/Users/user/Documents/GitClones/algoritmosAvancados/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Teclado from \"./components/Teclado\";\nimport AcessButton from \"./components/AcessButton\";\nimport CreateUserButton from \"./components/CreateUserButton\";\nimport tecladoService from \"./services/tecladoService\";\nimport logo from '../src/resources/catolica.png'; \nimport CreateUserModal from \"./components/CreateUserModal\";\n\nfunction App() {\n  const [teclado, setTeclado] = useState([]);\n  const [erro, setErro] = useState(\"\");\n\n  useEffect(() => {\n    gerarTeclado();\n  }, []);\n\n  const gerarTeclado = async () => {\n    try {\n      const response = await tecladoService.gerarTeclado();\n      setTeclado(response.data);\n    } catch (err) {\n      setErro(\"Erro ao carregar teclado\");\n    }\n  };\n\n  const resetarTentativas = async () => {\n    try {\n      await tecladoService.resetarTentativas();\n      setErro(\"\");\n      gerarTeclado();\n    } catch (err) {\n      setErro(\"Erro ao resetar tentativas\");\n    }\n  };\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n\n  return (\n    <div className=\"App\">\n      <h1>Teclado Virtual</h1>\n      <userGrid user/>\n      {erro && <p className=\"error-message\">{erro}</p>}\n      <Teclado teclas={teclado} />\n      <AcessButton onAcess={resetarTentativas} />\n      <CreateUserButton onAcess={openModal}/>\n      <CreateUserModal isOpen={isModalOpen} onRequestClose={closeModal} />\n      <img src={logo} alt=\"CatÃ³lica SC\" className=\"logo\"/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,IAAI,MAAM,+BAA+B;AAChD,OAAOC,eAAe,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACdgB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,cAAc,CAACW,YAAY,CAAC,CAAC;MACpDH,UAAU,CAACI,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZJ,OAAO,CAAC,0BAA0B,CAAC;IACrC;EACF,CAAC;EAED,MAAMK,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMf,cAAc,CAACe,iBAAiB,CAAC,CAAC;MACxCL,OAAO,CAAC,EAAE,CAAC;MACXC,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZJ,OAAO,CAAC,4BAA4B,CAAC;IACvC;EACF,CAAC;EAED,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMsB,SAAS,GAAGA,CAAA,KAAMD,cAAc,CAAC,IAAI,CAAC;EAC5C,MAAME,UAAU,GAAGA,CAAA,KAAMF,cAAc,CAAC,KAAK,CAAC;EAE9C,oBACEb,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAAiB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBrB,OAAA;MAAUsB,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACfhB,IAAI,iBAAIL,OAAA;MAAGgB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEZ;IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDrB,OAAA,CAACP,OAAO;MAAC8B,MAAM,EAAEpB;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5BrB,OAAA,CAACN,WAAW;MAAC8B,OAAO,EAAEb;IAAkB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3CrB,OAAA,CAACL,gBAAgB;MAAC6B,OAAO,EAAEV;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvCrB,OAAA,CAACF,eAAe;MAAC2B,MAAM,EAAEb,WAAY;MAACc,cAAc,EAAEX;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpErB,OAAA;MAAK2B,GAAG,EAAE9B,IAAK;MAAC+B,GAAG,EAAC,gBAAa;MAACZ,SAAS,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV;AAACnB,EAAA,CA5CQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}