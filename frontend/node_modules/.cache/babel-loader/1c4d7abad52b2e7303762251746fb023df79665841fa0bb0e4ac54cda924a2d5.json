{"ast":null,"code":"var _jsxFileName = \"C:\\\\Estudos\\\\algoritmosAvancados\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Teclado from \"./components/Teclado\";\nimport AcessButton from \"./components/AcessButton\";\nimport CreateUserButton from \"./components/CreateUserButton\";\nimport tecladoService from \"./services/tecladoService\";\nimport logo from \"../src/resources/catolica.png\";\nimport CreateUserModal from \"./components/CreateUserModal\";\nimport UserGrid from \"./components/userGrid\";\nimport CryptoJS from \"crypto-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chaveSecreta = \"teste-front\";\nfunction App() {\n  _s();\n  const [teclado, setTeclado] = useState([]);\n  const [erro, setErro] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [resetSenha, setResetSenha] = useState(false);\n  const [usuario, setUsuario] = useState(\"\");\n  useEffect(() => {\n    gerarTeclado();\n  }, []);\n  const gerarTeclado = async () => {\n    try {\n      const response = await tecladoService.gerarTeclado();\n      setTeclado(response.data);\n    } catch (err) {\n      setErro(\"Erro ao carregar teclado\");\n    }\n  };\n  const acessarSistema = async () => {\n    try {\n      const senhaCriptografada = CryptoJS.AES.encrypt(senha, chaveSecreta).toString();\n      const response = await tecladoService.acessarSistema(senhaCriptografada, usuario);\n      setErro(\"\");\n      alert(response.data.message);\n    } catch (err) {\n      gerarTeclado();\n      setSenha(\"\");\n      setResetSenha(true);\n      setErro(err.response ? err.response.data.message : \"Erro desconhecido.\");\n    }\n  };\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserGrid, {\n      usuario: usuario,\n      setUsuario: setUsuario\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), erro && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: erro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Teclado, {\n      teclas: teclado,\n      setSenha: setSenha,\n      resetSenha: resetSenha\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(AcessButton, {\n        onAcess: acessarSistema\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateUserButton, {\n        onAcess: () => setIsModalOpen(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateUserModal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"Cat\\xF3lica SC\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jidH00ogyFbCAVUxfqJagj6W01g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Teclado","AcessButton","CreateUserButton","tecladoService","logo","CreateUserModal","UserGrid","CryptoJS","jsxDEV","_jsxDEV","chaveSecreta","App","_s","teclado","setTeclado","erro","setErro","senha","setSenha","resetSenha","setResetSenha","usuario","setUsuario","gerarTeclado","response","data","err","acessarSistema","senhaCriptografada","AES","encrypt","toString","alert","message","isModalOpen","setIsModalOpen","className","children","fileName","_jsxFileName","lineNumber","columnNumber","teclas","onAcess","isOpen","onRequestClose","src","alt","_c","$RefreshReg$"],"sources":["C:/Estudos/algoritmosAvancados/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Teclado from \"./components/Teclado\";\r\nimport AcessButton from \"./components/AcessButton\";\r\nimport CreateUserButton from \"./components/CreateUserButton\";\r\nimport tecladoService from \"./services/tecladoService\";\r\nimport logo from \"../src/resources/catolica.png\";\r\nimport CreateUserModal from \"./components/CreateUserModal\";\r\nimport UserGrid from \"./components/userGrid\";\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nconst chaveSecreta = \"teste-front\";\r\n\r\nfunction App() {\r\n  const [teclado, setTeclado] = useState([]);\r\n  const [erro, setErro] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [resetSenha, setResetSenha] = useState(false);\r\n  const [usuario, setUsuario] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    gerarTeclado();\r\n  }, []);\r\n\r\n  const gerarTeclado = async () => {\r\n    try {\r\n      const response = await tecladoService.gerarTeclado();\r\n      setTeclado(response.data);\r\n    } catch (err) {\r\n      setErro(\"Erro ao carregar teclado\");\r\n    }\r\n  };\r\n\r\n  const acessarSistema = async () => {\r\n    try {\r\n      const senhaCriptografada = CryptoJS.AES.encrypt(senha, chaveSecreta).toString();\r\n      const response = await tecladoService.acessarSistema(senhaCriptografada, usuario);\r\n      setErro(\"\");\r\n      alert(response.data.message);\r\n    } catch (err) {\r\n      gerarTeclado();\r\n      setSenha(\"\");\r\n      setResetSenha(true);\r\n      setErro(err.response ? err.response.data.message : \"Erro desconhecido.\");\r\n    }\r\n  };\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n      <UserGrid usuario={usuario} setUsuario={setUsuario} />\r\n      {erro && <p className=\"error-message\">{erro}</p>}\r\n      <Teclado teclas={teclado} setSenha={setSenha} resetSenha={resetSenha} />\r\n      \r\n      <div className=\"button-container\">\r\n        <AcessButton onAcess={acessarSistema} />\r\n        <CreateUserButton onAcess={() => setIsModalOpen(true)} />\r\n      </div>\r\n      \r\n      <CreateUserModal isOpen={isModalOpen} onRequestClose={() => setIsModalOpen(false)} />\r\n      <img src={logo} alt=\"CatÃ³lica SC\" className=\"logo\"/>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}