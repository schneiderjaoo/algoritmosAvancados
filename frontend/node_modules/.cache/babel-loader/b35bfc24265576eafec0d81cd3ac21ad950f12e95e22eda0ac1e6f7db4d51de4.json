{"ast":null,"code":"var _jsxFileName = \"C:\\\\Estudos\\\\algoritmosAvancados\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Teclado from \"./components/Teclado\";\nimport AcessButton from \"./components/AcessButton\";\nimport CreateUserButton from \"./components/CreateUserButton\";\nimport tecladoService from \"./services/tecladoService\";\nimport logo from \"../src/resources/catolica.png\";\nimport CreateUserModal from \"./components/CreateUserModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [teclado, setTeclado] = useState([]);\n  const [erro, setErro] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    gerarTeclado();\n  }, []);\n  const gerarTeclado = async () => {\n    try {\n      const response = await tecladoService.gerarTeclado();\n      setTeclado(response.data);\n    } catch (err) {\n      setErro(\"Erro ao carregar teclado\");\n    }\n  };\n  const acessarSistema = async () => {\n    try {\n      console.log(\"Enviando senha: \", senha);\n      const response = await tecladoService.acessarSistema(senha);\n      setErro(\"\");\n      gerarTeclado();\n      alert(response.data.message);\n    } catch (err) {\n      setErro(\"Erro ao tentar acessar o sistema\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), erro && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: erro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Teclado, {\n      teclas: teclado,\n      setSenha: setSenha\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AcessButton, {\n      onAcess: acessarSistema\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateUserButton, {\n      onAcess: () => setIsModalOpen(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateUserModal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"Cat\\xF3lica SC\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zuk32RFTesweUjpyg9Juv0Eb3Lg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Teclado","AcessButton","CreateUserButton","tecladoService","logo","CreateUserModal","jsxDEV","_jsxDEV","App","_s","teclado","setTeclado","erro","setErro","senha","setSenha","isModalOpen","setIsModalOpen","gerarTeclado","response","data","err","acessarSistema","console","log","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","teclas","onAcess","isOpen","onRequestClose","src","alt","_c","$RefreshReg$"],"sources":["C:/Estudos/algoritmosAvancados/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Teclado from \"./components/Teclado\";\r\nimport AcessButton from \"./components/AcessButton\";\r\nimport CreateUserButton from \"./components/CreateUserButton\";\r\nimport tecladoService from \"./services/tecladoService\";\r\nimport logo from \"../src/resources/catolica.png\";\r\nimport CreateUserModal from \"./components/CreateUserModal\";\r\n\r\nfunction App() {\r\n  const [teclado, setTeclado] = useState([]);\r\n  const [erro, setErro] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    gerarTeclado();\r\n  }, []);\r\n\r\n  const gerarTeclado = async () => {\r\n    try {\r\n      const response = await tecladoService.gerarTeclado();\r\n      setTeclado(response.data);\r\n    } catch (err) {\r\n      setErro(\"Erro ao carregar teclado\");\r\n    }\r\n  };\r\n\r\n  const acessarSistema = async () => {\r\n    try {\r\n      console.log(\"Enviando senha: \", senha);\r\n      const response = await tecladoService.acessarSistema(senha);\r\n      setErro(\"\");\r\n      gerarTeclado();\r\n      alert(response.data.message);\r\n    } catch (err) {\r\n      setErro(\"Erro ao tentar acessar o sistema\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n      {erro && <p className=\"error-message\">{erro}</p>}\r\n      <Teclado teclas={teclado} setSenha={setSenha} />\r\n      <AcessButton onAcess={acessarSistema} />\r\n      <CreateUserButton onAcess={() => setIsModalOpen(true)} />\r\n      <CreateUserModal isOpen={isModalOpen} onRequestClose={() => setIsModalOpen(false)} />\r\n      <img src={logo} alt=\"CatÃ³lica SC\" className=\"logo\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}