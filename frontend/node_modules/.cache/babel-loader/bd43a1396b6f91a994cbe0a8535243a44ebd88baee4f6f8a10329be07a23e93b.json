{"ast":null,"code":"var _jsxFileName = \"C:\\\\Estudos\\\\algoritmosAvancados\\\\frontend\\\\src\\\\components\\\\Teclado.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TecladoButton from \"./TecladoButton\";\nimport { FaBackspace } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Teclado({\n  teclas,\n  setSenha,\n  resetSenha\n}) {\n  _s();\n  const [valorDigitado, setValorDigitado] = useState(\"\");\n  useEffect(() => {\n    if (resetSenha) {\n      setValorDigitado(\"\");\n    }\n  }, [resetSenha]);\n  const handleClick = value => {\n    const novoValor = valorDigitado + value;\n    setValorDigitado(novoValor.replace(\",\", \"\"));\n    setSenha(novoValor.replace(\",\", \"\"));\n  };\n  const handleClear = () => {\n    setValorDigitado(\"\"); // Limpa o campo de senha\n    setSenha(\"\"); // Limpa a senha no estado global\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"teclado-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: valorDigitado,\n        readOnly: true,\n        className: \"display-input\",\n        placeholder: \"Digite os n\\xFAmeros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"teclado\",\n      children: [teclas.map((tecla, index) => /*#__PURE__*/_jsxDEV(TecladoButton, {\n        label: tecla.label,\n        value: tecla.value,\n        onClick: handleClick\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"teclado-button apagar\",\n        onClick: handleClear,\n        children: [/*#__PURE__*/_jsxDEV(FaBackspace, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), \" CE\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Teclado, \"9+ykLKnFcReJ382ghEaecR5Y2s8=\");\n_c = Teclado;\nexport default Teclado;\nvar _c;\n$RefreshReg$(_c, \"Teclado\");","map":{"version":3,"names":["React","useState","useEffect","TecladoButton","FaBackspace","jsxDEV","_jsxDEV","Teclado","teclas","setSenha","resetSenha","_s","valorDigitado","setValorDigitado","handleClick","value","novoValor","replace","handleClear","className","children","type","readOnly","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","tecla","index","label","onClick","_c","$RefreshReg$"],"sources":["C:/Estudos/algoritmosAvancados/frontend/src/components/Teclado.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TecladoButton from \"./TecladoButton\";\r\nimport { FaBackspace } from \"react-icons/fa\";\r\n\r\nfunction Teclado({ teclas, setSenha, resetSenha }) {\r\n  const [valorDigitado, setValorDigitado] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (resetSenha) {\r\n      setValorDigitado(\"\"); \r\n    }\r\n  }, [resetSenha]); \r\n\r\n  const handleClick = (value) => {\r\n    const novoValor = valorDigitado + value;\r\n    setValorDigitado(novoValor.replace(\",\", \"\"));\r\n    setSenha(novoValor.replace(\",\", \"\"));\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setValorDigitado(\"\");  // Limpa o campo de senha\r\n    setSenha(\"\");          // Limpa a senha no estado global\r\n  };\r\n\r\n  return (\r\n    <div className=\"teclado-container\">\r\n      <div className=\"display\">\r\n        <input\r\n          type=\"password\"\r\n          value={valorDigitado}\r\n          readOnly\r\n          className=\"display-input\"\r\n          placeholder=\"Digite os números\"\r\n        />\r\n      </div>\r\n      <div className=\"teclado\">\r\n        {teclas.map((tecla, index) => (\r\n          <TecladoButton\r\n            key={index}\r\n            label={tecla.label}\r\n            value={tecla.value}\r\n            onClick={handleClick}\r\n          />\r\n        ))}\r\n        \r\n        {/* Botão para limpar toda a senha */}\r\n        <button className=\"teclado-button apagar\" onClick={handleClear}>\r\n          <FaBackspace /> CE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Teclado;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,OAAOA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,IAAIQ,UAAU,EAAE;MACdG,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;EAEhB,MAAMI,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,SAAS,GAAGJ,aAAa,GAAGG,KAAK;IACvCF,gBAAgB,CAACG,SAAS,CAACC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC5CR,QAAQ,CAACO,SAAS,CAACC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;EACtC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBL,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAE;IACvBJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAU;EACzB,CAAC;EAED,oBACEH,OAAA;IAAKa,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCd,OAAA;MAAKa,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBd,OAAA;QACEe,IAAI,EAAC,UAAU;QACfN,KAAK,EAAEH,aAAc;QACrBU,QAAQ;QACRH,SAAS,EAAC,eAAe;QACzBI,WAAW,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrB,OAAA;MAAKa,SAAS,EAAC,SAAS;MAAAC,QAAA,GACrBZ,MAAM,CAACoB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBxB,OAAA,CAACH,aAAa;QAEZ4B,KAAK,EAAEF,KAAK,CAACE,KAAM;QACnBhB,KAAK,EAAEc,KAAK,CAACd,KAAM;QACnBiB,OAAO,EAAElB;MAAY,GAHhBgB,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACF,CAAC,eAGFrB,OAAA;QAAQa,SAAS,EAAC,uBAAuB;QAACa,OAAO,EAAEd,WAAY;QAAAE,QAAA,gBAC7Dd,OAAA,CAACF,WAAW;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,OACjB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAhDQJ,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAkDhB,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}