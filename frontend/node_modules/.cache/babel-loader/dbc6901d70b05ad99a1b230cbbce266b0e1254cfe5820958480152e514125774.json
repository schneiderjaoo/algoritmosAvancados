{"ast":null,"code":"var _jsxFileName = \"C:\\\\Estudos\\\\algoritmosAvancados\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Teclado from \"./components/Teclado\";\nimport AcessButton from \"./components/AcessButton\";\nimport tecladoService from \"./services/tecladoService\";\nimport logo from \"../src/resources/catolica.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [teclado, setTeclado] = useState([]);\n  const [senhaDigitada, setSenhaDigitada] = useState(\"\"); // Adicionando estado para senha\n  const [erro, setErro] = useState(\"\");\n  useEffect(() => {\n    gerarTeclado();\n  }, []);\n  const gerarTeclado = async () => {\n    try {\n      const response = await tecladoService.gerarTeclado();\n      setTeclado(response.data);\n    } catch (err) {\n      setErro(\"Erro ao carregar teclado\");\n    }\n  };\n  const handleTeclaPressionada = valor => {\n    setSenhaDigitada(prev => prev + valor); // Concatena os números pressionados\n  };\n  const acessarSistema = async () => {\n    try {\n      await tecladoService.acessarSistema(senhaDigitada);\n      setErro(\"\");\n      gerarTeclado();\n    } catch (err) {\n      setErro(\"Erro ao acessar sistema\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teclado Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), erro && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: erro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Teclado, {\n      teclas: teclado,\n      onTeclaPressionada: handleTeclaPressionada\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AcessButton, {\n      onAcess: acessarSistema\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Senha Digitada: \", senhaDigitada]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"Cat\\xF3lica SC\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xw+4N6+bVYf13+QZZnJL1fiTYX4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Teclado","AcessButton","tecladoService","logo","jsxDEV","_jsxDEV","App","_s","teclado","setTeclado","senhaDigitada","setSenhaDigitada","erro","setErro","gerarTeclado","response","data","err","handleTeclaPressionada","valor","prev","acessarSistema","className","children","fileName","_jsxFileName","lineNumber","columnNumber","teclas","onTeclaPressionada","onAcess","src","alt","_c","$RefreshReg$"],"sources":["C:/Estudos/algoritmosAvancados/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Teclado from \"./components/Teclado\";\r\nimport AcessButton from \"./components/AcessButton\";\r\nimport tecladoService from \"./services/tecladoService\";\r\nimport logo from \"../src/resources/catolica.png\";\r\n\r\nfunction App() {\r\n  const [teclado, setTeclado] = useState([]);\r\n  const [senhaDigitada, setSenhaDigitada] = useState(\"\"); // Adicionando estado para senha\r\n  const [erro, setErro] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    gerarTeclado();\r\n  }, []);\r\n\r\n  const gerarTeclado = async () => {\r\n    try {\r\n      const response = await tecladoService.gerarTeclado();\r\n      setTeclado(response.data);\r\n    } catch (err) {\r\n      setErro(\"Erro ao carregar teclado\");\r\n    }\r\n  };\r\n\r\n  const handleTeclaPressionada = (valor) => {\r\n    setSenhaDigitada((prev) => prev + valor); // Concatena os números pressionados\r\n  };\r\n\r\n  const acessarSistema = async () => {\r\n    try {\r\n      await tecladoService.acessarSistema(senhaDigitada);\r\n      setErro(\"\");\r\n      gerarTeclado();\r\n    } catch (err) {\r\n      setErro(\"Erro ao acessar sistema\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Teclado Virtual</h1>\r\n      {erro && <p className=\"error-message\">{erro}</p>}\r\n      <Teclado teclas={teclado} onTeclaPressionada={handleTeclaPressionada} />\r\n      <AcessButton onAcess={acessarSistema} />\r\n\r\n      <p>Senha Digitada: {senhaDigitada}</p>\r\n\r\n      <img src={logo} alt=\"Católica SC\" className=\"logo\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,IAAI,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACdgB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,cAAc,CAACY,YAAY,CAAC,CAAC;MACpDL,UAAU,CAACM,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZJ,OAAO,CAAC,0BAA0B,CAAC;IACrC;EACF,CAAC;EAED,MAAMK,sBAAsB,GAAIC,KAAK,IAAK;IACxCR,gBAAgB,CAAES,IAAI,IAAKA,IAAI,GAAGD,KAAK,CAAC,CAAC,CAAC;EAC5C,CAAC;EAED,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMnB,cAAc,CAACmB,cAAc,CAACX,aAAa,CAAC;MAClDG,OAAO,CAAC,EAAE,CAAC;MACXC,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZJ,OAAO,CAAC,yBAAyB,CAAC;IACpC;EACF,CAAC;EAED,oBACER,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA;MAAAkB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBf,IAAI,iBAAIP,OAAA;MAAGiB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEX;IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDtB,OAAA,CAACL,OAAO;MAAC4B,MAAM,EAAEpB,OAAQ;MAACqB,kBAAkB,EAAEX;IAAuB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxEtB,OAAA,CAACJ,WAAW;MAAC6B,OAAO,EAAET;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAExCtB,OAAA;MAAAkB,QAAA,GAAG,kBAAgB,EAACb,aAAa;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEtCtB,OAAA;MAAK0B,GAAG,EAAE5B,IAAK;MAAC6B,GAAG,EAAC,gBAAa;MAACV,SAAS,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACpB,EAAA,CA5CQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}