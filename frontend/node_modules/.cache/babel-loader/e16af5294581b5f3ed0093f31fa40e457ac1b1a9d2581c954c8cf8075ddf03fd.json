{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import TecladoButton from\"./TecladoButton\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Teclado(_ref){let{teclas,setSenha,resetSenha}=_ref;const[valorDigitado,setValorDigitado]=useState(\"\");useEffect(()=>{if(resetSenha){setValorDigitado(\"\");// Limpa o campo\n}},[resetSenha]);// Sempre que `resetSenha` mudar, o campo será resetado\nconst handleClick=value=>{const novoValor=valorDigitado+value;setValorDigitado(novoValor.replace(\",\",\"\"));setSenha(novoValor.replace(\",\",\"\"));};return/*#__PURE__*/_jsxs(\"div\",{className:\"teclado-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"display\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:valorDigitado,readOnly:true,className:\"display-input\",placeholder:\"Digite os n\\xFAmeros\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"teclado\",children:teclas.map((tecla,index)=>/*#__PURE__*/_jsx(TecladoButton,{label:tecla.label,value:tecla.value,onClick:handleClick},index))})]});}export default Teclado;","map":{"version":3,"names":["React","useState","useEffect","TecladoButton","jsx","_jsx","jsxs","_jsxs","Teclado","_ref","teclas","setSenha","resetSenha","valorDigitado","setValorDigitado","handleClick","value","novoValor","replace","className","children","type","readOnly","placeholder","map","tecla","index","label","onClick"],"sources":["C:/Estudos/algoritmosAvancados/frontend/src/components/Teclado.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TecladoButton from \"./TecladoButton\";\r\n\r\nfunction Teclado({ teclas, setSenha, resetSenha }) {\r\n  const [valorDigitado, setValorDigitado] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (resetSenha) {\r\n      setValorDigitado(\"\"); // Limpa o campo\r\n    }\r\n  }, [resetSenha]); // Sempre que `resetSenha` mudar, o campo será resetado\r\n\r\n  const handleClick = (value) => {\r\n    const novoValor = valorDigitado + value;\r\n    setValorDigitado(novoValor.replace(\",\", \"\"));\r\n    setSenha(novoValor.replace(\",\", \"\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"teclado-container\">\r\n      <div className=\"display\">\r\n        <input\r\n          type=\"password\"\r\n          value={valorDigitado}\r\n          readOnly\r\n          className=\"display-input\"\r\n          placeholder=\"Digite os números\"\r\n        />\r\n      </div>\r\n      <div className=\"teclado\">\r\n        {teclas.map((tecla, index) => (\r\n          <TecladoButton\r\n            key={index}\r\n            label={tecla.label}\r\n            value={tecla.value}\r\n            onClick={handleClick}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Teclado;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5C,QAAS,CAAAC,OAAOA,CAAAC,IAAA,CAAmC,IAAlC,CAAEC,MAAM,CAAEC,QAAQ,CAAEC,UAAW,CAAC,CAAAH,IAAA,CAC/C,KAAM,CAACI,aAAa,CAAEC,gBAAgB,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAEtDC,SAAS,CAAC,IAAM,CACd,GAAIU,UAAU,CAAE,CACdE,gBAAgB,CAAC,EAAE,CAAC,CAAE;AACxB,CACF,CAAC,CAAE,CAACF,UAAU,CAAC,CAAC,CAAE;AAElB,KAAM,CAAAG,WAAW,CAAIC,KAAK,EAAK,CAC7B,KAAM,CAAAC,SAAS,CAAGJ,aAAa,CAAGG,KAAK,CACvCF,gBAAgB,CAACG,SAAS,CAACC,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,CAAC,CAC5CP,QAAQ,CAACM,SAAS,CAACC,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,CAAC,CACtC,CAAC,CAED,mBACEX,KAAA,QAAKY,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCf,IAAA,QAAKc,SAAS,CAAC,SAAS,CAAAC,QAAA,cACtBf,IAAA,UACEgB,IAAI,CAAC,UAAU,CACfL,KAAK,CAAEH,aAAc,CACrBS,QAAQ,MACRH,SAAS,CAAC,eAAe,CACzBI,WAAW,CAAC,sBAAmB,CAChC,CAAC,CACC,CAAC,cACNlB,IAAA,QAAKc,SAAS,CAAC,SAAS,CAAAC,QAAA,CACrBV,MAAM,CAACc,GAAG,CAAC,CAACC,KAAK,CAAEC,KAAK,gBACvBrB,IAAA,CAACF,aAAa,EAEZwB,KAAK,CAAEF,KAAK,CAACE,KAAM,CACnBX,KAAK,CAAES,KAAK,CAACT,KAAM,CACnBY,OAAO,CAAEb,WAAY,EAHhBW,KAIN,CACF,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAlB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}